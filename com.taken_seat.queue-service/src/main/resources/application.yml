spring:
  application:
    name: queue-service
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
server:
  port: 19094

service:
  jwt:
    secret-key: ${JWT_SECRET}
  admin:
    code: toolatebro

kafka:
  topic:
    queue-request: waitingQueue.request
    queue-result: waitingQueue.request


eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE}
    register-with-eureka: true
    fetch-registry: true

management:
  metrics:
    tags:
      application: queue-service
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT}
  tracing:
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: always
    prometheus:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: '*'

common:
  kafka:
    bootstrap-servers: "${KAFKA_BOOTSTRAP_SERVERS}"
  trust-package: "com.taken_seat.common_service.message"


logging:
  loki:
    url: ${LOKI_URL}