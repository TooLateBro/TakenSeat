spring:
  application:
    name: performance-service

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}

  jpa:
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        use_sql_comments: true
    hibernate:
      ddl-auto: update

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}

server:
  port: 19096

management:
  endpoints:
    web:
      exposure:
        include: "*"

  endpoint:
    health:
      show-details: always

  metrics:
    tags:
      application: performance-service

  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT}

  tracing:
    sampling:
      probability: 1.0

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE}

common:
  kafka:
    bootstrap-servers: "${KAFKA_BOOTSTRAP_SERVERS}"
  trust-package: "com.taken_seat.common_service.message"

logging:
  loki:
    url: ${LOKI_URL}

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

variable:
  lock-wait-time: 3 # 초
  lock-lease-time: 5 # 초

performance:
  kafka:
    dlq:
      retry-interval-ms: 0
      max-attempts: 3
